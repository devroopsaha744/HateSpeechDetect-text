{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":8503427,"sourceType":"datasetVersion","datasetId":5075104}],"dockerImageVersionId":30699,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"#installing the dependencies\n!pip install -q accelerate \n!pip install -q transformers\n!pip install -q peft\n!pip install -q bitsandbytes\n!pip install -q datasets\n!pip install -q trl\n!pip install huggingface_hub -q","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:41:20.808316Z","iopub.execute_input":"2024-05-27T09:41:20.808660Z","iopub.status.idle":"2024-05-27T09:42:53.669954Z","shell.execute_reply.started":"2024-05-27T09:41:20.808631Z","shell.execute_reply":"2024-05-27T09:42:53.668890Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"#importing the dependencies\nimport os\nimport torch\nfrom datasets import load_dataset\nfrom transformers import (\n    AutoModelForSequenceClassification,\n    AutoTokenizer,\n    BitsAndBytesConfig,\n    HfArgumentParser,\n    TrainingArguments,\n    pipeline,\n    logging,\n    Trainer,\n    DataCollatorWithPadding\n)\nfrom peft import LoraConfig, PeftModel, get_peft_model, prepare_model_for_kbit_training\nfrom trl import SFTTrainer\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nimport numpy as np\nfrom sklearn.metrics import classification_report, accuracy_score, recall_score, f1_score, precision_score","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:43:27.419255Z","iopub.execute_input":"2024-05-27T09:43:27.420195Z","iopub.status.idle":"2024-05-27T09:43:45.565803Z","shell.execute_reply.started":"2024-05-27T09:43:27.420157Z","shell.execute_reply":"2024-05-27T09:43:45.564859Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stderr","text":"2024-05-27 09:43:36.066288: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-05-27 09:43:36.066388: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-05-27 09:43:36.193980: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"}]},{"cell_type":"code","source":"torch.backends.cuda.enable_mem_efficient_sdp(False)\ntorch.backends.cuda.enable_flash_sdp(False)\n#torch.set_default_tensor_type(torch.cuda.FloatTensor)","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:43:45.567216Z","iopub.execute_input":"2024-05-27T09:43:45.567885Z","iopub.status.idle":"2024-05-27T09:43:45.573329Z","shell.execute_reply.started":"2024-05-27T09:43:45.567859Z","shell.execute_reply":"2024-05-27T09:43:45.572333Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"from kaggle_secrets import UserSecretsClient\nuser_secrets = UserSecretsClient()\nhf_token = user_secrets.get_secret(\"HF_TOKEN\")\nhuggingface_api_token= user_secrets.get_secret(\"HUGGINGFACE_API_TOKEN\")","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:43:46.990638Z","iopub.execute_input":"2024-05-27T09:43:46.991497Z","iopub.status.idle":"2024-05-27T09:43:47.300060Z","shell.execute_reply.started":"2024-05-27T09:43:46.991463Z","shell.execute_reply":"2024-05-27T09:43:47.299067Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"from huggingface_hub import login\nlogin(token = hf_token)","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:43:49.088376Z","iopub.execute_input":"2024-05-27T09:43:49.089306Z","iopub.status.idle":"2024-05-27T09:43:49.217689Z","shell.execute_reply.started":"2024-05-27T09:43:49.089265Z","shell.execute_reply":"2024-05-27T09:43:49.216777Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"Token has not been saved to git credential helper. Pass `add_to_git_credential=True` if you want to set the git credential as well.\nToken is valid (permission: write).\nYour token has been saved to /root/.cache/huggingface/token\nLogin successful\n","output_type":"stream"}]},{"cell_type":"code","source":"#Using the dataset locally \ndf = pd.read_csv(\"/kaggle/input/hatespeech-data/THAR-Dataset.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:43:51.318332Z","iopub.execute_input":"2024-05-27T09:43:51.318686Z","iopub.status.idle":"2024-05-27T09:43:51.400467Z","shell.execute_reply.started":"2024-05-27T09:43:51.318658Z","shell.execute_reply":"2024-05-27T09:43:51.399679Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"code","source":"df","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:43:52.818422Z","iopub.execute_input":"2024-05-27T09:43:52.819020Z","iopub.status.idle":"2024-05-27T09:43:52.841576Z","shell.execute_reply.started":"2024-05-27T09:43:52.818989Z","shell.execute_reply":"2024-05-27T09:43:52.840692Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"       Identifier                                            Comment  \\\n0            3345  चमचों! बोल दो वहां पाकिस्तान में भी ये सब \"भाज...   \n1            9317  अब हम तुम जैसी औरतों पर भरोसा नहीं कर सकते हैं...   \n2            8713  Ea log sach bolna, nhe jante, zhooth- per zhoo...   \n3            3072                    Insaniyat naam ki chez nhi inme   \n4            5983  Bandar bajrang khan chale bare se muh ke sath ...   \n...           ...                                                ...   \n11544        3215  इन लोगों को अपने कुरान का पुरा ज्ञान हि नहीं व...   \n11545       10269  Aap sahi keh rahe hain...aur bhi achchha lagta...   \n11546        2356  Jihadio ka sampurn bahiskar desh ke liye jaruri h   \n11547        6888  Bharat ke Hindu Yun Hi Soya Raha to Yahan Bhi ...   \n11548        7108  Chinalo randa giri chodo isiliye na un ladko s...   \n\n               SubTask1  SubTask2  \n0          AntiReligion     Islam  \n1      Non-AntiReligion       NaN  \n2      Non-AntiReligion       NaN  \n3      Non-AntiReligion       NaN  \n4          AntiReligion  Hinduism  \n...                 ...       ...  \n11544      AntiReligion     Islam  \n11545      AntiReligion  Hinduism  \n11546  Non-AntiReligion       NaN  \n11547      AntiReligion     Islam  \n11548      AntiReligion  Hinduism  \n\n[11549 rows x 4 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Identifier</th>\n      <th>Comment</th>\n      <th>SubTask1</th>\n      <th>SubTask2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3345</td>\n      <td>चमचों! बोल दो वहां पाकिस्तान में भी ये सब \"भाज...</td>\n      <td>AntiReligion</td>\n      <td>Islam</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>9317</td>\n      <td>अब हम तुम जैसी औरतों पर भरोसा नहीं कर सकते हैं...</td>\n      <td>Non-AntiReligion</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>8713</td>\n      <td>Ea log sach bolna, nhe jante, zhooth- per zhoo...</td>\n      <td>Non-AntiReligion</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3072</td>\n      <td>Insaniyat naam ki chez nhi inme</td>\n      <td>Non-AntiReligion</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5983</td>\n      <td>Bandar bajrang khan chale bare se muh ke sath ...</td>\n      <td>AntiReligion</td>\n      <td>Hinduism</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>11544</th>\n      <td>3215</td>\n      <td>इन लोगों को अपने कुरान का पुरा ज्ञान हि नहीं व...</td>\n      <td>AntiReligion</td>\n      <td>Islam</td>\n    </tr>\n    <tr>\n      <th>11545</th>\n      <td>10269</td>\n      <td>Aap sahi keh rahe hain...aur bhi achchha lagta...</td>\n      <td>AntiReligion</td>\n      <td>Hinduism</td>\n    </tr>\n    <tr>\n      <th>11546</th>\n      <td>2356</td>\n      <td>Jihadio ka sampurn bahiskar desh ke liye jaruri h</td>\n      <td>Non-AntiReligion</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>11547</th>\n      <td>6888</td>\n      <td>Bharat ke Hindu Yun Hi Soya Raha to Yahan Bhi ...</td>\n      <td>AntiReligion</td>\n      <td>Islam</td>\n    </tr>\n    <tr>\n      <th>11548</th>\n      <td>7108</td>\n      <td>Chinalo randa giri chodo isiliye na un ladko s...</td>\n      <td>AntiReligion</td>\n      <td>Hinduism</td>\n    </tr>\n  </tbody>\n</table>\n<p>11549 rows × 4 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df_copy = df.copy()","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:43:55.238295Z","iopub.execute_input":"2024-05-27T09:43:55.238977Z","iopub.status.idle":"2024-05-27T09:43:55.243485Z","shell.execute_reply.started":"2024-05-27T09:43:55.238935Z","shell.execute_reply":"2024-05-27T09:43:55.242630Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"len(df)/2","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:44:13.136158Z","iopub.execute_input":"2024-05-27T09:44:13.136504Z","iopub.status.idle":"2024-05-27T09:44:13.142603Z","shell.execute_reply.started":"2024-05-27T09:44:13.136475Z","shell.execute_reply":"2024-05-27T09:44:13.141500Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"5774.5"},"metadata":{}}]},{"cell_type":"code","source":"df = df[:5775]","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:44:28.326430Z","iopub.execute_input":"2024-05-27T09:44:28.326804Z","iopub.status.idle":"2024-05-27T09:44:28.333324Z","shell.execute_reply.started":"2024-05-27T09:44:28.326776Z","shell.execute_reply":"2024-05-27T09:44:28.332265Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"df['SubTask1'] = df['SubTask1'].replace({'Non-AntiReligion':0, 'AntiReligion' : 1})\ndf['SubTask2'] = df['SubTask2'].replace({'Islam':1, 'Hinduism' : 2, 'Christianity ' : 3, np.nan: 4})","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:44:31.038204Z","iopub.execute_input":"2024-05-27T09:44:31.038987Z","iopub.status.idle":"2024-05-27T09:44:31.056452Z","shell.execute_reply.started":"2024-05-27T09:44:31.038927Z","shell.execute_reply":"2024-05-27T09:44:31.055110Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_34/1005213589.py:1: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n  df['SubTask1'] = df['SubTask1'].replace({'Non-AntiReligion':0, 'AntiReligion' : 1})\n/tmp/ipykernel_34/1005213589.py:1: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df['SubTask1'] = df['SubTask1'].replace({'Non-AntiReligion':0, 'AntiReligion' : 1})\n/tmp/ipykernel_34/1005213589.py:2: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n  df['SubTask2'] = df['SubTask2'].replace({'Islam':1, 'Hinduism' : 2, 'Christianity ' : 3, np.nan: 4})\n/tmp/ipykernel_34/1005213589.py:2: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df['SubTask2'] = df['SubTask2'].replace({'Islam':1, 'Hinduism' : 2, 'Christianity ' : 3, np.nan: 4})\n","output_type":"stream"}]},{"cell_type":"code","source":"df","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:44:34.528336Z","iopub.execute_input":"2024-05-27T09:44:34.529183Z","iopub.status.idle":"2024-05-27T09:44:34.546672Z","shell.execute_reply.started":"2024-05-27T09:44:34.529150Z","shell.execute_reply":"2024-05-27T09:44:34.545813Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"      Identifier                                            Comment  SubTask1  \\\n0           3345  चमचों! बोल दो वहां पाकिस्तान में भी ये सब \"भाज...         1   \n1           9317  अब हम तुम जैसी औरतों पर भरोसा नहीं कर सकते हैं...         0   \n2           8713  Ea log sach bolna, nhe jante, zhooth- per zhoo...         0   \n3           3072                    Insaniyat naam ki chez nhi inme         0   \n4           5983  Bandar bajrang khan chale bare se muh ke sath ...         1   \n...          ...                                                ...       ...   \n5770        3255  इनको साफ साफ बोलो ना की भारत का फौजी सिर्फ भार...         1   \n5771       11068                         Inlog ko koi kaam nahi hai         0   \n5772        5565  Main bilkul sahmat Nahin hun kyunki musalmanon...         1   \n5773        8725  Kisse ka dharm parivartan jabran ja kisse lala...         0   \n5774        5276  Punjab mai har dusre family Christian ban rhe hai         1   \n\n      SubTask2  \n0          1.0  \n1          4.0  \n2          4.0  \n3          4.0  \n4          2.0  \n...        ...  \n5770       1.0  \n5771       4.0  \n5772       2.0  \n5773       4.0  \n5774       3.0  \n\n[5775 rows x 4 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Identifier</th>\n      <th>Comment</th>\n      <th>SubTask1</th>\n      <th>SubTask2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3345</td>\n      <td>चमचों! बोल दो वहां पाकिस्तान में भी ये सब \"भाज...</td>\n      <td>1</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>9317</td>\n      <td>अब हम तुम जैसी औरतों पर भरोसा नहीं कर सकते हैं...</td>\n      <td>0</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>8713</td>\n      <td>Ea log sach bolna, nhe jante, zhooth- per zhoo...</td>\n      <td>0</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3072</td>\n      <td>Insaniyat naam ki chez nhi inme</td>\n      <td>0</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5983</td>\n      <td>Bandar bajrang khan chale bare se muh ke sath ...</td>\n      <td>1</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>5770</th>\n      <td>3255</td>\n      <td>इनको साफ साफ बोलो ना की भारत का फौजी सिर्फ भार...</td>\n      <td>1</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>5771</th>\n      <td>11068</td>\n      <td>Inlog ko koi kaam nahi hai</td>\n      <td>0</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>5772</th>\n      <td>5565</td>\n      <td>Main bilkul sahmat Nahin hun kyunki musalmanon...</td>\n      <td>1</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>5773</th>\n      <td>8725</td>\n      <td>Kisse ka dharm parivartan jabran ja kisse lala...</td>\n      <td>0</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>5774</th>\n      <td>5276</td>\n      <td>Punjab mai har dusre family Christian ban rhe hai</td>\n      <td>1</td>\n      <td>3.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5775 rows × 4 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df['SubTask1'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:44:36.668240Z","iopub.execute_input":"2024-05-27T09:44:36.669095Z","iopub.status.idle":"2024-05-27T09:44:36.682512Z","shell.execute_reply.started":"2024-05-27T09:44:36.669055Z","shell.execute_reply":"2024-05-27T09:44:36.681648Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"SubTask1\n0    3070\n1    2705\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df['SubTask2'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:44:38.428275Z","iopub.execute_input":"2024-05-27T09:44:38.428998Z","iopub.status.idle":"2024-05-27T09:44:38.437996Z","shell.execute_reply.started":"2024-05-27T09:44:38.428961Z","shell.execute_reply":"2024-05-27T09:44:38.436986Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"SubTask2\n4.0    3070\n1.0    1829\n2.0     669\n3.0     207\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"#Seperating the Target Variable \nx = list(df['Comment'])\ny_1 = list(df['SubTask1'])\ny_2 = list(df['SubTask2'])","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:44:39.620450Z","iopub.execute_input":"2024-05-27T09:44:39.620807Z","iopub.status.idle":"2024-05-27T09:44:39.628592Z","shell.execute_reply.started":"2024-05-27T09:44:39.620779Z","shell.execute_reply":"2024-05-27T09:44:39.627491Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"code","source":"x_train, x_val, y_train, y_val = train_test_split(x,y_1, test_size = 0.2)","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:44:42.288363Z","iopub.execute_input":"2024-05-27T09:44:42.288734Z","iopub.status.idle":"2024-05-27T09:44:42.297527Z","shell.execute_reply.started":"2024-05-27T09:44:42.288703Z","shell.execute_reply":"2024-05-27T09:44:42.296597Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":"#Loading a Quantized Model \nmodel_id = \"google/gemma-2b\"\n\nbnb_config = BitsAndBytesConfig(\n        load_in_4bit = True,\n        bnb_4bit_quant_type='nf4',\n        bnb_4bit_use_double_quant=False,\n    )\n#Load model and tokenizer\nmodel = AutoModelForSequenceClassification.from_pretrained(\n    model_id,\n    device_map=\"auto\",\n    quantization_config = bnb_config\n)","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:44:50.038844Z","iopub.execute_input":"2024-05-27T09:44:50.039246Z","iopub.status.idle":"2024-05-27T09:45:21.677472Z","shell.execute_reply.started":"2024-05-27T09:44:50.039215Z","shell.execute_reply":"2024-05-27T09:45:21.676669Z"},"trusted":true},"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/627 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f67f4adc46c8445eb68d853b1a2d460f"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"model.safetensors.index.json:   0%|          | 0.00/13.5k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"97499b7a299f45269e44810657e85d84"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Downloading shards:   0%|          | 0/2 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ed8748a38c4e4f6282a430f1d8b4a1fb"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"model-00001-of-00002.safetensors:   0%|          | 0.00/4.95G [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"170d93773afb4826b16530c5536c90c8"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"model-00002-of-00002.safetensors:   0%|          | 0.00/67.1M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4267132b7ef648f3ac6255698ee9ed49"}},"metadata":{}},{"name":"stderr","text":"Gemma's activation function should be approximate GeLU and not exact GeLU.\nChanging the activation function to `gelu_pytorch_tanh`.if you want to use the legacy `gelu`, edit the `model.config` to set `hidden_activation=gelu`   instead of `hidden_act`. See https://github.com/huggingface/transformers/pull/29402 for more details.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e96b84081e9f4d1e8901bc96c88ca622"}},"metadata":{}},{"name":"stderr","text":"Some weights of GemmaForSequenceClassification were not initialized from the model checkpoint at google/gemma-2b and are newly initialized: ['score.weight']\nYou should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n","output_type":"stream"}]},{"cell_type":"code","source":"tokenizer = AutoTokenizer.from_pretrained(model_id)\n\ntokenizer.pad_token = tokenizer.eos_token\nmodel.config.pad_token_id = model.config.eos_token_id","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:45:21.679212Z","iopub.execute_input":"2024-05-27T09:45:21.679915Z","iopub.status.idle":"2024-05-27T09:45:23.725589Z","shell.execute_reply.started":"2024-05-27T09:45:21.679878Z","shell.execute_reply":"2024-05-27T09:45:23.724689Z"},"trusted":true},"execution_count":19,"outputs":[{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/33.6k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c9d1009e930f4675a5ba22bfc9578472"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer.model:   0%|          | 0.00/4.24M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8e9f2be3404642e99e2a9ec1f9644f5a"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer.json:   0%|          | 0.00/17.5M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f97dcf2ba4e84d6aaf33e2633641a154"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"special_tokens_map.json:   0%|          | 0.00/636 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"27e077d680d34fffa67ab4c0c2d1e9af"}},"metadata":{}}]},{"cell_type":"code","source":"x_train_tokenized = tokenizer(x_train, truncation = True, padding = True, max_length = 512 )\nx_val_tokenized = tokenizer(x_val, truncation = True,padding = True, max_length = 512 )","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:45:24.788353Z","iopub.execute_input":"2024-05-27T09:45:24.788718Z","iopub.status.idle":"2024-05-27T09:45:26.469988Z","shell.execute_reply.started":"2024-05-27T09:45:24.788690Z","shell.execute_reply":"2024-05-27T09:45:26.468812Z"},"trusted":true},"execution_count":20,"outputs":[]},{"cell_type":"code","source":"class Dataset(torch.utils.data.Dataset):\n    def __init__(self, encodings, labels=None):\n        self.encodings = encodings\n        self.labels = labels\n\n    def __getitem__(self, idx):\n        item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}\n        if self.labels:\n            item[\"labels\"] = torch.tensor(self.labels[idx])\n        return item\n\n    def __len__(self):\n        return len(self.encodings[\"input_ids\"])","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:45:31.713352Z","iopub.execute_input":"2024-05-27T09:45:31.713920Z","iopub.status.idle":"2024-05-27T09:45:31.720465Z","shell.execute_reply.started":"2024-05-27T09:45:31.713888Z","shell.execute_reply":"2024-05-27T09:45:31.719558Z"},"trusted":true},"execution_count":21,"outputs":[]},{"cell_type":"code","source":"train_dataset = Dataset(x_train_tokenized, y_train)\nval_dataset = Dataset(x_val_tokenized, y_val)","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:45:41.558877Z","iopub.execute_input":"2024-05-27T09:45:41.559251Z","iopub.status.idle":"2024-05-27T09:45:41.563744Z","shell.execute_reply.started":"2024-05-27T09:45:41.559220Z","shell.execute_reply":"2024-05-27T09:45:41.562840Z"},"trusted":true},"execution_count":22,"outputs":[]},{"cell_type":"code","source":"data_collator = DataCollatorWithPadding(tokenizer=tokenizer)","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:45:50.809581Z","iopub.execute_input":"2024-05-27T09:45:50.810228Z","iopub.status.idle":"2024-05-27T09:45:50.814082Z","shell.execute_reply.started":"2024-05-27T09:45:50.810195Z","shell.execute_reply":"2024-05-27T09:45:50.813193Z"},"trusted":true},"execution_count":23,"outputs":[]},{"cell_type":"code","source":"def compute_metrics(p):\n    print(type(p))\n    pred, labels = p\n    pred = np.argmax(pred, axis=1)\n\n    accuracy = accuracy_score(y_true=labels, y_pred=pred)\n    recall = recall_score(y_true=labels, y_pred=pred)\n    precision = precision_score(y_true=labels, y_pred=pred)\n    f1 = f1_score(y_true=labels, y_pred=pred)\n\n    return {\"accuracy\": accuracy, \"precision\": precision, \"recall\": recall, \"f1\": f1}","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:46:56.583986Z","iopub.execute_input":"2024-05-27T09:46:56.584862Z","iopub.status.idle":"2024-05-27T09:46:56.591122Z","shell.execute_reply.started":"2024-05-27T09:46:56.584829Z","shell.execute_reply":"2024-05-27T09:46:56.589694Z"},"trusted":true},"execution_count":29,"outputs":[]},{"cell_type":"code","source":"model = prepare_model_for_kbit_training(model)","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:46:57.704042Z","iopub.execute_input":"2024-05-27T09:46:57.704664Z","iopub.status.idle":"2024-05-27T09:46:57.724871Z","shell.execute_reply.started":"2024-05-27T09:46:57.704634Z","shell.execute_reply":"2024-05-27T09:46:57.723955Z"},"trusted":true},"execution_count":30,"outputs":[]},{"cell_type":"code","source":"#Setting up the LoRA configurations\npeft_config = LoraConfig(\n        lora_alpha=128,\n        lora_dropout=0.05,\n        r=1,\n        bias=\"none\",\n        target_modules=\"all-linear\",\n        task_type=\"SEQ_CLS\",\n)","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:46:59.811776Z","iopub.execute_input":"2024-05-27T09:46:59.812157Z","iopub.status.idle":"2024-05-27T09:46:59.817875Z","shell.execute_reply.started":"2024-05-27T09:46:59.812124Z","shell.execute_reply":"2024-05-27T09:46:59.816911Z"},"trusted":true},"execution_count":31,"outputs":[]},{"cell_type":"code","source":"peft_config","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:47:02.866527Z","iopub.execute_input":"2024-05-27T09:47:02.867349Z","iopub.status.idle":"2024-05-27T09:47:02.872869Z","shell.execute_reply.started":"2024-05-27T09:47:02.867317Z","shell.execute_reply":"2024-05-27T09:47:02.872000Z"},"trusted":true},"execution_count":32,"outputs":[{"execution_count":32,"output_type":"execute_result","data":{"text/plain":"LoraConfig(peft_type=<PeftType.LORA: 'LORA'>, auto_mapping=None, base_model_name_or_path=None, revision=None, task_type='SEQ_CLS', inference_mode=False, r=1, target_modules='all-linear', lora_alpha=128, lora_dropout=0.05, fan_in_fan_out=False, bias='none', use_rslora=False, modules_to_save=None, init_lora_weights=True, layers_to_transform=None, layers_pattern=None, rank_pattern={}, alpha_pattern={}, megatron_config=None, megatron_core='megatron.core', loftq_config={}, use_dora=False, layer_replication=None)"},"metadata":{}}]},{"cell_type":"code","source":"model_peft_1 = get_peft_model(model, peft_config)\nmodel_peft_1.print_trainable_parameters()","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:47:05.283855Z","iopub.execute_input":"2024-05-27T09:47:05.284231Z","iopub.status.idle":"2024-05-27T09:47:05.461203Z","shell.execute_reply.started":"2024-05-27T09:47:05.284201Z","shell.execute_reply":"2024-05-27T09:47:05.460293Z"},"trusted":true},"execution_count":33,"outputs":[{"name":"stdout","text":"trainable params: 1,231,874 || all params: 2,507,410,436 || trainable%: 0.0491\n","output_type":"stream"}]},{"cell_type":"code","source":"lr = 1e-3\nbatch_size = 32\nnum_epochs = 1","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:47:19.513983Z","iopub.execute_input":"2024-05-27T09:47:19.515094Z","iopub.status.idle":"2024-05-27T09:47:19.519681Z","shell.execute_reply.started":"2024-05-27T09:47:19.515045Z","shell.execute_reply":"2024-05-27T09:47:19.518639Z"},"trusted":true},"execution_count":34,"outputs":[]},{"cell_type":"code","source":"training_args = TrainingArguments(\n    output_dir= model_id + \"hatespeechdetection-subtask1\",\n    learning_rate=lr,\n    per_device_train_batch_size=batch_size,\n    per_device_eval_batch_size=batch_size,\n    num_train_epochs=num_epochs,\n    weight_decay=0.01,\n    evaluation_strategy=\"epoch\",\n    save_strategy=\"epoch\",\n    load_best_model_at_end=True,\n)","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:47:21.459912Z","iopub.execute_input":"2024-05-27T09:47:21.460743Z","iopub.status.idle":"2024-05-27T09:47:21.493402Z","shell.execute_reply.started":"2024-05-27T09:47:21.460713Z","shell.execute_reply":"2024-05-27T09:47:21.492667Z"},"trusted":true},"execution_count":35,"outputs":[]},{"cell_type":"code","source":"trainer = Trainer(\n    model=model_peft_1,\n    args=training_args,\n    train_dataset=train_dataset,\n    eval_dataset = val_dataset,\n    tokenizer=tokenizer,\n    data_collator = data_collator\n)","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:47:23.783935Z","iopub.execute_input":"2024-05-27T09:47:23.784310Z","iopub.status.idle":"2024-05-27T09:47:24.395783Z","shell.execute_reply.started":"2024-05-27T09:47:23.784283Z","shell.execute_reply":"2024-05-27T09:47:24.395069Z"},"trusted":true},"execution_count":36,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \ndataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n  warnings.warn(\n","output_type":"stream"}]},{"cell_type":"code","source":"trainer.train()","metadata":{"execution":{"iopub.status.busy":"2024-05-27T09:47:26.245283Z","iopub.execute_input":"2024-05-27T09:47:26.245879Z","iopub.status.idle":"2024-05-27T12:47:21.553873Z","shell.execute_reply.started":"2024-05-27T09:47:26.245844Z","shell.execute_reply":"2024-05-27T12:47:21.552855Z"},"trusted":true},"execution_count":37,"outputs":[{"name":"stderr","text":"\u001b[34m\u001b[1mwandb\u001b[0m: Logging into wandb.ai. (Learn how to deploy a W&B server locally: https://wandb.me/wandb-server)\n\u001b[34m\u001b[1mwandb\u001b[0m: You can find your API key in your browser here: https://wandb.ai/authorize\n\u001b[34m\u001b[1mwandb\u001b[0m: Paste an API key from your profile and hit enter, or press ctrl+c to quit:","output_type":"stream"},{"output_type":"stream","name":"stdin","text":"  ········································\n"},{"name":"stderr","text":"\u001b[34m\u001b[1mwandb\u001b[0m: Appending key for api.wandb.ai to your netrc file: /root/.netrc\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"wandb version 0.17.0 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"Tracking run with wandb version 0.16.6"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"Run data is saved locally in <code>/kaggle/working/wandb/run-20240527_094735-e3tfy95q</code>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"Syncing run <strong><a href='https://wandb.ai/hate-speech-detect/huggingface/runs/e3tfy95q' target=\"_blank\">dazzling-donkey-9</a></strong> to <a href='https://wandb.ai/hate-speech-detect/huggingface' target=\"_blank\">Weights & Biases</a> (<a href='https://wandb.me/run' target=\"_blank\">docs</a>)<br/>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":" View project at <a href='https://wandb.ai/hate-speech-detect/huggingface' target=\"_blank\">https://wandb.ai/hate-speech-detect/huggingface</a>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":" View run at <a href='https://wandb.ai/hate-speech-detect/huggingface/runs/e3tfy95q' target=\"_blank\">https://wandb.ai/hate-speech-detect/huggingface/runs/e3tfy95q</a>"},"metadata":{}},{"name":"stderr","text":"`use_cache=True` is incompatible with gradient checkpointing. Setting `use_cache=False`.\n/opt/conda/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.\n  warnings.warn(\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n    <div>\n      \n      <progress value='145' max='145' style='width:300px; height:20px; vertical-align: middle;'></progress>\n      [145/145 2:58:21, Epoch 1/1]\n    </div>\n    <table border=\"1\" class=\"dataframe\">\n  <thead>\n <tr style=\"text-align: left;\">\n      <th>Epoch</th>\n      <th>Training Loss</th>\n      <th>Validation Loss</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>1</td>\n      <td>No log</td>\n      <td>0.689395</td>\n    </tr>\n  </tbody>\n</table><p>"},"metadata":{}},{"execution_count":37,"output_type":"execute_result","data":{"text/plain":"TrainOutput(global_step=145, training_loss=1.108123779296875, metrics={'train_runtime': 10794.8757, 'train_samples_per_second': 0.428, 'train_steps_per_second': 0.013, 'total_flos': 2.814574281007104e+16, 'train_loss': 1.108123779296875, 'epoch': 1.0})"},"metadata":{}}]},{"cell_type":"code","source":"trainer.evaluate()","metadata":{"execution":{"iopub.status.busy":"2024-05-27T12:47:59.842149Z","iopub.execute_input":"2024-05-27T12:47:59.842965Z","iopub.status.idle":"2024-05-27T13:00:41.045406Z","shell.execute_reply.started":"2024-05-27T12:47:59.842912Z","shell.execute_reply":"2024-05-27T13:00:41.044525Z"},"trusted":true},"execution_count":38,"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n    <div>\n      \n      <progress value='37' max='37' style='width:300px; height:20px; vertical-align: middle;'></progress>\n      [37/37 12:30]\n    </div>\n    "},"metadata":{}},{"execution_count":38,"output_type":"execute_result","data":{"text/plain":"{'eval_loss': 0.6893951892852783,\n 'eval_runtime': 761.1929,\n 'eval_samples_per_second': 1.517,\n 'eval_steps_per_second': 0.049,\n 'epoch': 1.0}"},"metadata":{}}]},{"cell_type":"code","source":"#Gemma2b metrics:\n'''\n{'eval_loss': 0.6893951892852783,\n 'eval_runtime': 761.1929,\n 'eval_samples_per_second': 1.517,\n 'eval_steps_per_second': 0.049,\n 'epoch': 1.0}\n'''","metadata":{"execution":{"iopub.status.busy":"2024-05-27T13:00:54.738362Z","iopub.execute_input":"2024-05-27T13:00:54.738702Z","iopub.status.idle":"2024-05-27T13:00:54.744340Z","shell.execute_reply.started":"2024-05-27T13:00:54.738672Z","shell.execute_reply":"2024-05-27T13:00:54.743288Z"},"trusted":true},"execution_count":39,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}